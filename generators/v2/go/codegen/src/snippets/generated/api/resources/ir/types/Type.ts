/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernSnippets from "../../../index";

/**
 * Represents the type of a parameter that can be used to generate a dynamic type.
 *
 * Note that some types are omitted because they aren't required by the Go generator
 * (e.g. a list is the same as a set, literals don't need to be explicitly provided, etc).
 *
 * TODO: Add support for unions.
 */
export type Type =
    | FernSnippets.Type.Enum
    | FernSnippets.Type.ListType
    | FernSnippets.Type.MapType
    | FernSnippets.Type.Object_
    | FernSnippets.Type.Optional
    | FernSnippets.Type.Primitive
    | FernSnippets.Type.Unknown;

export declare namespace Type {
    interface Enum extends FernSnippets.EnumType {
        type: "enum";
    }

    interface ListType {
        type: "listType";
        value: FernSnippets.Type;
    }

    interface MapType extends FernSnippets.MapType {
        type: "mapType";
    }

    interface Object_ extends FernSnippets.ObjectType {
        type: "object";
    }

    interface Optional {
        type: "optional";
        value: FernSnippets.Type;
    }

    interface Primitive {
        type: "primitive";
        value: FernSnippets.PrimitiveType;
    }

    interface Unknown {
        type: "unknown";
    }
}
