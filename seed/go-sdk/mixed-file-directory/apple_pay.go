// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/mixed-file-directory/fern/core"
)

type RegisterDomainRequest struct {
	// A domain name as described in RFC-1034 that will be registered with ApplePay.
	DomainName string `json:"domain_name" url:"-"`
}

// Defines the fields that are included in the response body of
// a request to the [RegisterDomain](api-endpoint:ApplePay-RegisterDomain) endpoint.
//
// Either `errors` or `status` are present in a given response (never both).
type RegisterDomainResponse struct {
	// Any errors that occurred during the request.
	Errors []*Error `json:"errors,omitempty" url:"errors,omitempty"`
	// The status of the domain registration.
	//
	// See [RegisterDomainResponseStatus](entity:RegisterDomainResponseStatus) for possible values.
	// See [RegisterDomainResponseStatus](#type-registerdomainresponsestatus) for possible values
	Status *RegisterDomainResponseStatus `json:"status,omitempty" url:"status,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (r *RegisterDomainResponse) GetExtraProperties() map[string]interface{} {
	return r.extraProperties
}

func (r *RegisterDomainResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler RegisterDomainResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*r = RegisterDomainResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *r)
	if err != nil {
		return err
	}
	r.extraProperties = extraProperties

	r._rawJSON = json.RawMessage(data)
	return nil
}

func (r *RegisterDomainResponse) String() string {
	if len(r._rawJSON) > 0 {
		if value, err := core.StringifyJSON(r._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(r); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", r)
}
