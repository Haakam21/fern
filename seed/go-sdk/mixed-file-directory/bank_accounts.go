// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/mixed-file-directory/fern/core"
)

type BankAccountsListRequest struct {
	// The pagination cursor returned by a previous call to this endpoint.
	// Use it in the next `ListBankAccounts` request to retrieve the next set
	// of results.
	//
	// See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
	Cursor *string `json:"-" url:"cursor,omitempty"`
	// Upper limit on the number of bank accounts to return in the response.
	// Currently, 1000 is the largest supported limit. You can specify a limit
	// of up to 1000 bank accounts. This is also the default limit.
	Limit *int `json:"-" url:"limit,omitempty"`
	// Location ID. You can specify this optional filter
	// to retrieve only the linked bank accounts belonging to a specific location.
	LocationId *string `json:"-" url:"location_id,omitempty"`
}

// Response object returned by GetBankAccountByV1Id.
type GetBankAccountByV1IdResponse struct {
	// Information on errors encountered during the request.
	Errors []*Error `json:"errors,omitempty" url:"errors,omitempty"`
	// The requested `BankAccount` object.
	BankAccount *BankAccount `json:"bank_account,omitempty" url:"bank_account,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (g *GetBankAccountByV1IdResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetBankAccountByV1IdResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetBankAccountByV1IdResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetBankAccountByV1IdResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties

	g._rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetBankAccountByV1IdResponse) String() string {
	if len(g._rawJSON) > 0 {
		if value, err := core.StringifyJSON(g._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

// Response object returned by `GetBankAccount`.
type GetBankAccountResponse struct {
	// Information on errors encountered during the request.
	Errors []*Error `json:"errors,omitempty" url:"errors,omitempty"`
	// The requested `BankAccount` object.
	BankAccount *BankAccount `json:"bank_account,omitempty" url:"bank_account,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (g *GetBankAccountResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GetBankAccountResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GetBankAccountResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GetBankAccountResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties

	g._rawJSON = json.RawMessage(data)
	return nil
}

func (g *GetBankAccountResponse) String() string {
	if len(g._rawJSON) > 0 {
		if value, err := core.StringifyJSON(g._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

// Response object returned by ListBankAccounts.
type ListBankAccountsResponse struct {
	// Information on errors encountered during the request.
	Errors []*Error `json:"errors,omitempty" url:"errors,omitempty"`
	// List of BankAccounts associated with this account.
	BankAccounts []*BankAccount `json:"bank_accounts,omitempty" url:"bank_accounts,omitempty"`
	// When a response is truncated, it includes a cursor that you can
	// use in a subsequent request to fetch next set of bank accounts.
	// If empty, this is the final response.
	//
	// For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
	Cursor *string `json:"cursor,omitempty" url:"cursor,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (l *ListBankAccountsResponse) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *ListBankAccountsResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ListBankAccountsResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListBankAccountsResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties

	l._rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListBankAccountsResponse) String() string {
	if len(l._rawJSON) > 0 {
		if value, err := core.StringifyJSON(l._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}
