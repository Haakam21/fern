{
    "types": {
        "_type": "placeholder"
    },
    "endpoints": [
        {
            "id": {
                "path": "/resource",
                "method": "GET",
                "identifier_override": "endpoint_service.listResources"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tfern \"github.com/mixed-case/fern\"\n\tfernclient \"github.com/mixed-case/fern/client\"\n)\n\nclient := fernclient.NewClient()\nresponse, err := client.Service.ListResources(\n\tctx,\n\t\u0026fern.ListResourcesRequest{\n\t\tPageLimit: 10,\n\t\tBeforeDate: fern.MustParseDate(\n\t\t\t\"2023-01-01\",\n\t\t),\n\t},\n)\n"
            }
        },
        {
            "id": {
                "path": "/resource/{ResourceID}",
                "method": "GET",
                "identifier_override": "endpoint_service.getResource"
            },
            "snippet": {
                "type": "go",
                "client": "import fernclient \"github.com/mixed-case/fern/client\"\n\nclient := fernclient.NewClient()\nresponse, err := client.Service.GetResource(\n\tctx,\n\t\"rsc-xyz\",\n)\n"
            }
        }
    ],
    "features": {
        "REQUEST_OPTIONS": [
            {
                "id": {
                    "path": "/resource",
                    "method": "GET",
                    "identifier_override": "endpoint_service.listResources"
                },
                "snippet": {
                    "type": "go",
                    "client": "client := fernclient.NewClient()\nresponse, err := client.Service.ListResources(\n\tctx,\n\t\u0026fern.ListResourcesRequest{\n\t\tPageLimit: 10,\n\t\tBeforeDate: fern.MustParseDate(\n\t\t\t\"2023-01-01\",\n\t\t),\n\t},\n\toption.WithHTTPClient(\n\t\t\u0026http.Client{\n\t\t\tTimeout: 5 * time.Second,\n\t\t},\n\t),\n)\n"
                }
            },
            {
                "id": {
                    "path": "/resource/{ResourceID}",
                    "method": "GET",
                    "identifier_override": "endpoint_service.getResource"
                },
                "snippet": {
                    "type": "go",
                    "client": "client := fernclient.NewClient()\nresponse, err := client.Service.GetResource(\n\tctx,\n\t\"rsc-xyz\",\n\toption.WithHTTPClient(\n\t\t\u0026http.Client{\n\t\t\tTimeout: 5 * time.Second,\n\t\t},\n\t),\n)\n"
                }
            }
        ],
        "TIMEOUTS": [
            {
                "id": {
                    "path": "/resource",
                    "method": "GET",
                    "identifier_override": "endpoint_service.listResources"
                },
                "snippet": {
                    "type": "go",
                    "client": "ctx, cancel := context.WithTimeout(context.Background(), time.Second)\ndefer cancel()\n\nresponse, err := client.Service.ListResources(\n\tctx,\n\t\u0026fern.ListResourcesRequest{\n\t\tPageLimit: 10,\n\t\tBeforeDate: fern.MustParseDate(\n\t\t\t\"2023-01-01\",\n\t\t),\n\t},\n)\n"
                }
            },
            {
                "id": {
                    "path": "/resource/{ResourceID}",
                    "method": "GET",
                    "identifier_override": "endpoint_service.getResource"
                },
                "snippet": {
                    "type": "go",
                    "client": "ctx, cancel := context.WithTimeout(context.Background(), time.Second)\ndefer cancel()\n\nresponse, err := client.Service.GetResource(\n\tctx,\n\t\"rsc-xyz\",\n)\n"
                }
            }
        ],
        "USAGE": [
            {
                "id": {
                    "path": "/resource",
                    "method": "GET",
                    "identifier_override": "endpoint_service.listResources"
                },
                "snippet": {
                    "type": "go",
                    "client": "import (\n\tfern \"github.com/mixed-case/fern\"\n\tfernclient \"github.com/mixed-case/fern/client\"\n)\n\nclient := fernclient.NewClient()\nresponse, err := client.Service.ListResources(\n\tctx,\n\t\u0026fern.ListResourcesRequest{\n\t\tPageLimit: 10,\n\t\tBeforeDate: fern.MustParseDate(\n\t\t\t\"2023-01-01\",\n\t\t),\n\t},\n)\n"
                }
            },
            {
                "id": {
                    "path": "/resource/{ResourceID}",
                    "method": "GET",
                    "identifier_override": "endpoint_service.getResource"
                },
                "snippet": {
                    "type": "go",
                    "client": "import fernclient \"github.com/mixed-case/fern/client\"\n\nclient := fernclient.NewClient()\nresponse, err := client.Service.GetResource(\n\tctx,\n\t\"rsc-xyz\",\n)\n"
                }
            }
        ]
    },
    "requirements": [
        "Go version \u003e= 1.13"
    ]
}