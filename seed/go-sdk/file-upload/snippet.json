{
    "types": {
        "_type": "placeholder"
    },
    "endpoints": [
        {
            "id": {
                "path": "/",
                "method": "POST",
                "identifier_override": "endpoint_service.post"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tfern \"github.com/file-upload/fern\"\n\tfernclient \"github.com/file-upload/fern/client\"\n)\n\nclient := fernclient.NewClient()\nerr := client.Service.Post(\n\tctx,\n\t\u0026fern.MyRequest{},\n)\n"
            }
        },
        {
            "id": {
                "path": "/just-file-with-query-params",
                "method": "POST",
                "identifier_override": "endpoint_service.justFileWithQueryParams"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tfern \"github.com/file-upload/fern\"\n\tfernclient \"github.com/file-upload/fern/client\"\n)\n\nclient := fernclient.NewClient()\nerr := client.Service.JustFileWithQueryParams(\n\tctx,\n\t\u0026fern.JustFileWithQueryParamsRequet{\n\t\tMaybeString:  \"string\",\n\t\tInteger:      1,\n\t\tMaybeInteger: 1,\n\t\tListOfStrings: []string{\n\t\t\t\"string\",\n\t\t},\n\t\tOptionalListOfStrings: []string{\n\t\t\t\"string\",\n\t\t},\n\t},\n)\n"
            }
        },
        {
            "id": {
                "path": "/just-file",
                "method": "POST",
                "identifier_override": "endpoint_service.justFile"
            },
            "snippet": {
                "type": "go",
                "client": "import fernclient \"github.com/file-upload/fern/client\"\n\nclient := fernclient.NewClient()\nerr := client.Service.JustFile(\n\tctx,\n)\n"
            }
        }
    ],
    "features": {
        "REQUEST_OPTIONS": [
            {
                "id": {
                    "path": "/",
                    "method": "POST",
                    "identifier_override": "endpoint_service.post"
                },
                "snippet": {
                    "type": "go",
                    "client": "client := fernclient.NewClient()\nerr := client.Service.Post(\n\tctx,\n\t\u0026fern.MyRequest{},\n\toption.WithHTTPClient(\n\t\t\u0026http.Client{\n\t\t\tTimeout: 5 * time.Second,\n\t\t},\n\t),\n)\n"
                }
            },
            {
                "id": {
                    "path": "/just-file-with-query-params",
                    "method": "POST",
                    "identifier_override": "endpoint_service.justFileWithQueryParams"
                },
                "snippet": {
                    "type": "go",
                    "client": "client := fernclient.NewClient()\nerr := client.Service.JustFileWithQueryParams(\n\tctx,\n\t\u0026fern.JustFileWithQueryParamsRequet{\n\t\tMaybeString:  \"string\",\n\t\tInteger:      1,\n\t\tMaybeInteger: 1,\n\t\tListOfStrings: []string{\n\t\t\t\"string\",\n\t\t},\n\t\tOptionalListOfStrings: []string{\n\t\t\t\"string\",\n\t\t},\n\t},\n\toption.WithHTTPClient(\n\t\t\u0026http.Client{\n\t\t\tTimeout: 5 * time.Second,\n\t\t},\n\t),\n)\n"
                }
            },
            {
                "id": {
                    "path": "/just-file",
                    "method": "POST",
                    "identifier_override": "endpoint_service.justFile"
                },
                "snippet": {
                    "type": "go",
                    "client": "client := fernclient.NewClient()\nerr := client.Service.JustFile(\n\tctx,\n\toption.WithHTTPClient(\n\t\t\u0026http.Client{\n\t\t\tTimeout: 5 * time.Second,\n\t\t},\n\t),\n)\n"
                }
            }
        ],
        "TIMEOUTS": [
            {
                "id": {
                    "path": "/",
                    "method": "POST",
                    "identifier_override": "endpoint_service.post"
                },
                "snippet": {
                    "type": "go",
                    "client": "ctx, cancel := context.WithTimeout(context.Background(), time.Second)\ndefer cancel()\n\nerr := client.Service.Post(\n\tctx,\n\t\u0026fern.MyRequest{},\n)\n"
                }
            },
            {
                "id": {
                    "path": "/just-file-with-query-params",
                    "method": "POST",
                    "identifier_override": "endpoint_service.justFileWithQueryParams"
                },
                "snippet": {
                    "type": "go",
                    "client": "ctx, cancel := context.WithTimeout(context.Background(), time.Second)\ndefer cancel()\n\nerr := client.Service.JustFileWithQueryParams(\n\tctx,\n\t\u0026fern.JustFileWithQueryParamsRequet{\n\t\tMaybeString:  \"string\",\n\t\tInteger:      1,\n\t\tMaybeInteger: 1,\n\t\tListOfStrings: []string{\n\t\t\t\"string\",\n\t\t},\n\t\tOptionalListOfStrings: []string{\n\t\t\t\"string\",\n\t\t},\n\t},\n)\n"
                }
            },
            {
                "id": {
                    "path": "/just-file",
                    "method": "POST",
                    "identifier_override": "endpoint_service.justFile"
                },
                "snippet": {
                    "type": "go",
                    "client": "ctx, cancel := context.WithTimeout(context.Background(), time.Second)\ndefer cancel()\n\nerr := client.Service.JustFile(\n\tctx,\n)\n"
                }
            }
        ],
        "USAGE": [
            {
                "id": {
                    "path": "/",
                    "method": "POST",
                    "identifier_override": "endpoint_service.post"
                },
                "snippet": {
                    "type": "go",
                    "client": "import (\n\tfern \"github.com/file-upload/fern\"\n\tfernclient \"github.com/file-upload/fern/client\"\n)\n\nclient := fernclient.NewClient()\nerr := client.Service.Post(\n\tctx,\n\t\u0026fern.MyRequest{},\n)\n"
                }
            },
            {
                "id": {
                    "path": "/just-file-with-query-params",
                    "method": "POST",
                    "identifier_override": "endpoint_service.justFileWithQueryParams"
                },
                "snippet": {
                    "type": "go",
                    "client": "import (\n\tfern \"github.com/file-upload/fern\"\n\tfernclient \"github.com/file-upload/fern/client\"\n)\n\nclient := fernclient.NewClient()\nerr := client.Service.JustFileWithQueryParams(\n\tctx,\n\t\u0026fern.JustFileWithQueryParamsRequet{\n\t\tMaybeString:  \"string\",\n\t\tInteger:      1,\n\t\tMaybeInteger: 1,\n\t\tListOfStrings: []string{\n\t\t\t\"string\",\n\t\t},\n\t\tOptionalListOfStrings: []string{\n\t\t\t\"string\",\n\t\t},\n\t},\n)\n"
                }
            },
            {
                "id": {
                    "path": "/just-file",
                    "method": "POST",
                    "identifier_override": "endpoint_service.justFile"
                },
                "snippet": {
                    "type": "go",
                    "client": "import fernclient \"github.com/file-upload/fern/client\"\n\nclient := fernclient.NewClient()\nerr := client.Service.JustFile(\n\tctx,\n)\n"
                }
            }
        ]
    },
    "requirements": [
        "Go version \u003e= 1.13"
    ]
}